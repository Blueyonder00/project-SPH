{"ast":null,"code":"// 对于axios进行二次封装\nimport axios from \"axios\";\n// 利用axios对象的方法create，去创建一个axios实例\nconst requests = axios.create({\n  // 设置默认路径\n  baseURL: '/api',\n  // 设置timeout\n  timeout: 5000\n});\n// 请求拦截器\nrequest.interceptors.request.use(config => {\n  // 包含一个请求头headers\n  return config;\n});\n// 响应拦截器\nrequest.interceptors.response.use(res => {\n  return res.data;\n}, error => {\n  console.log(error);\n});\n\n// 对外暴露\nexport default request;","map":{"version":3,"names":["axios","requests","create","baseURL","timeout","request","interceptors","use","config","response","res","data","error","console","log"],"sources":["/Users/szh/code/project/project-SPH/app/src/api/request.js"],"sourcesContent":["// 对于axios进行二次封装\nimport axios from \"axios\";\n// 利用axios对象的方法create，去创建一个axios实例\nconst requests = axios.create({\n    // 设置默认路径\n    baseURL:'/api',\n    // 设置timeout\n    timeout:5000,\n})\n// 请求拦截器\nrequest.interceptors.request.use(\n    (config)=> {\n        // 包含一个请求头headers\n        return config;\n\n    }\n\n);\n// 响应拦截器\nrequest.interceptors.response.use((res)=> {\n    return res.data;\n},(error)=> {\n    console.log(error)\n});\n\n\n// 对外暴露\nexport default request;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC1B;EACAC,OAAO,EAAC,MAAM;EACd;EACAC,OAAO,EAAC;AACZ,CAAC,CAAC;AACF;AACAC,OAAO,CAACC,YAAY,CAACD,OAAO,CAACE,GAAG,CAC3BC,MAAM,IAAI;EACP;EACA,OAAOA,MAAM;AAEjB,CAAC,CAEJ;AACD;AACAH,OAAO,CAACC,YAAY,CAACG,QAAQ,CAACF,GAAG,CAAEG,GAAG,IAAI;EACtC,OAAOA,GAAG,CAACC,IAAI;AACnB,CAAC,EAAEC,KAAK,IAAI;EACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;AACtB,CAAC,CAAC;;AAGF;AACA,eAAeP,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}