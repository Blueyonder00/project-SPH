{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 引入lodash库，按需引入\nimport throttle from 'lodash/throttle';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'MyNav',\n  data() {\n    return {\n      currentIndex: -1\n    };\n  },\n  mounted() {\n    this.$store.dispatch('categoryList');\n  },\n  computed: {\n    ...mapState(\n    // 右侧需要一个函数，当使用这个计算属性的时候，右侧函数会立即执行一次\n    // 注入一个参数，state，其实即为大仓库的数据\n    {\n      categoryList: state => {\n        // 因为数据存储在home中，不能采用数组直接映射\n        return state.home.categoryList;\n      }\n    })\n  },\n  methods: {\n    //正常情况，鼠标进入每一个一级分类标签，都会触发鼠标进入事件\n    //非正常情况，本身全部的一级分类都应该触发鼠标进入事件，当鼠标快速划过的时候，只有几个h3可以触发鼠标分类事件\n    //可能导致卡顿，需要引入节流\n\n    changeIndex: throttle(function (index) {\n      this.currentIndex = index;\n    }, 10),\n    leaveIndex() {\n      this.currentIndex = -1;\n    },\n    // 最好的解决方案是编程式导航+事件委派\n    // 事件委派如何确定点击的是哪个标签，如何获取参数【1.2.3级导航？】\n    goSearch(e) {\n      let element = e.target;\n      let {\n        categoryname,\n        categroy1Id,\n        categroy2Id,\n        category3Id\n      } = element.dataset;\n      if (categoryname) {\n        // 整理路由跳转的参数\n        let location = {\n          name: 'search',\n          query: {\n            categoryName: categoryname\n          }\n        };\n        if (categroy1Id) {\n          location.query.categroy1Id = categroy1Id;\n        } else if (categroy2Id) {\n          location.query.categroy2Id = categroy2Id;\n        } else {\n          location.query.categroy3Id = categroy3Id;\n        }\n        this.$router.push(location);\n      }\n    }\n  }\n};","map":{"version":3,"names":["throttle","mapState","name","data","currentIndex","mounted","$store","dispatch","computed","categoryList","state","home","methods","changeIndex","index","leaveIndex","goSearch","e","element","target","categoryname","categroy1Id","categroy2Id","category3Id","dataset","location","query","categoryName","categroy3Id","$router","push"],"sources":["src/components/MyNav/MyNav.vue"],"sourcesContent":["<template>\n  <div class=\"type-nav\">\n    <div class=\"container\">\n      <div @mouseleave=\"leaveIndex\">\n        <h2 class=\"all\">全部商品分类</h2>\n        <div class=\"sort\">\n          <!-- 利用事件委派+编程式导航实现路由跳转和参数传递 -->\n          <div class=\"all-sort-list2\" @click=\"goSearch\">\n            <div class=\"item\" v-for=\"(c1, index) in categoryList\" :key=\"c1.categroyId\" :class=\"{ cur: index == currentIndex }\"\n              @mouseenter=\"changeIndex(index)\">\n              <h3>\n                <a :data-categroyName=\"c1.categoryName\" :data-category1Id=\"c1.categroyId\">{{ c1.categoryName }}</a>\n                <!-- <router-link to=\"/search\">{{ c1.categoryName }}</router-link> -->\n              </h3>\n              <div class=\"item-list clearfix\" v-show=\"currentIndex==index\">\n                <div class=\"subitem\" v-for=\"c2 in c1.categoryChild\" :key=\"c2.categroyId\">\n                  <dl class=\"fore\">\n                    <dt>\n                      <a :data-categroyName=\"c2.categoryName\" :data-categroy1Id=\"c2.categroyId\">{{ c2.categoryName }}</a>\n                      <!-- <router-link to=\"/search\">{{ c2.categoryName }}</router-link> -->\n                    </dt>\n                    <dd>\n                      <em v-for=\"c3 in c2.categoryChild\" :key=\"c3.categroyId\">\n                        <a :data-categroyName=\"c3.categoryName\" :data-categroy1Id=\"c3.categroyId\">{{ c3.categoryName }}</a>\n                        <!-- <router-link to=\"/search\">{{ c3.categoryName }}</router-link> -->\n                      </em>\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n      <nav class=\"nav\">\n        <a href=\"###\">服装城</a>\n        <a href=\"###\">美妆馆</a>\n        <a href=\"###\">蘑菇屋超市</a>\n        <a href=\"###\">全球购</a>\n        <a href=\"###\">闪购</a>\n        <a href=\"###\">团购</a>\n        <a href=\"###\">有趣</a>\n        <a href=\"###\">秒杀</a>\n      </nav>\n    </div>\n  </div>\n</template>\n<script>\n// 引入lodash库，按需引入\nimport throttle from 'lodash/throttle';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'MyNav',\n  data() {\n    return {\n      currentIndex: -1,\n    }\n  },\n  mounted() {\n    this.$store.dispatch('categoryList');\n  },\n  computed: {\n    ...mapState(\n      // 右侧需要一个函数，当使用这个计算属性的时候，右侧函数会立即执行一次\n      // 注入一个参数，state，其实即为大仓库的数据\n      {\n        categoryList: (state) => {\n          // 因为数据存储在home中，不能采用数组直接映射\n          return state.home.categoryList\n        }\n      })\n  },\n  methods: {\n    //正常情况，鼠标进入每一个一级分类标签，都会触发鼠标进入事件\n    //非正常情况，本身全部的一级分类都应该触发鼠标进入事件，当鼠标快速划过的时候，只有几个h3可以触发鼠标分类事件\n    //可能导致卡顿，需要引入节流\n    \n    changeIndex:throttle(function(index) {\n        this.currentIndex = index;\n      },10),\n    leaveIndex() {\n      this.currentIndex = -1;\n    },\n    // 最好的解决方案是编程式导航+事件委派\n    // 事件委派如何确定点击的是哪个标签，如何获取参数【1.2.3级导航？】\n    goSearch(e) {\n      let element = e.target;\n      let {categoryname,categroy1Id,categroy2Id,category3Id} = element.dataset;\n      if (categoryname) { \n        // 整理路由跳转的参数\n        let location = {name:'search',query: {categoryName:categoryname}};\n        if (categroy1Id) {\n          location.query.categroy1Id = categroy1Id;\n        }else if (categroy2Id) {\n          location.query.categroy2Id = categroy2Id;\n        }else {\n          location.query.categroy3Id = categroy3Id;\n        }\n        this.$router.push(location);\n      }\n      \n\n\n\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"less\">\n.type-nav {\n  border-bottom: 2px solid #e1251b;\n\n  .container {\n    width: 1200px;\n    margin: 0 auto;\n    display: flex;\n    position: relative;\n\n\n    .all {\n      width: 210px;\n      height: 45px;\n      background-color: #e1251b;\n      line-height: 45px;\n      text-align: center;\n      color: #fff;\n      font-size: 14px;\n      font-weight: bold;\n    }\n\n    .nav {\n      a {\n        height: 45px;\n        margin: 0 22px;\n        line-height: 45px;\n        font-size: 16px;\n        color: #333;\n      }\n    }\n\n    .sort {\n      position: absolute;\n      left: 0;\n      top: 45px;\n      width: 210px;\n      height: 461px;\n      position: absolute;\n      background: #fafafa;\n      z-index: 999;\n\n      .all-sort-list2 {\n        height: 461px;\n        overflow: hidden;\n\n        .item {\n          h3 {\n            line-height: 31px;\n            font-size: 14px;\n            font-weight: 400;\n            overflow: hidden;\n            padding: 0 20px;\n            margin: 0;\n\n            a {\n              color: #333;\n            }\n          }\n\n          .item-list {\n            // display: none;\n            position: absolute;\n            width: 734px;\n            min-height: 460px;\n            background: #f7f7f7;\n            left: 210px;\n            border: 1px solid #ddd;\n            top: 0;\n            z-index: 9999 !important;\n\n            .subitem {\n              float: left;\n              width: 650px;\n              padding: 0 4px 0 8px;\n\n              dl {\n                border-top: 1px solid #eee;\n                padding: 6px 0;\n                overflow: hidden;\n                zoom: 1;\n\n                &.fore {\n                  border-top: 0;\n                }\n\n                dt {\n                  float: left;\n                  width: 54px;\n                  line-height: 22px;\n                  text-align: right;\n                  padding: 3px 6px 0 0;\n                  font-weight: 700;\n                }\n\n                dd {\n                  float: left;\n                  width: 450px;\n                  padding: 3px 0 0;\n                  overflow: hidden;\n\n                  em {\n                    float: left;\n                    height: 14px;\n                    line-height: 14px;\n                    padding: 0 8px;\n                    margin-top: 5px;\n                    border-left: 1px solid #ccc;\n                  }\n                }\n              }\n            }\n          }\n\n          // &:hover {\n\n          //   // 使用css使得背景颜色变化\n          //   // background-color: skyblue;\n          //   .item-list {\n          //     display: block;\n          //   }\n          // }\n        }\n\n        .cur {\n          background-color: skyblue;\n        }\n      }\n    }\n  }\n}</style>"],"mappings":";AAkDA;AACA,OAAAA,QAAA;AACA,SAAAC,QAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,MAAA,CAAAC,QAAA;EACA;EACAC,QAAA;IACA,GAAAP,QAAA;IACA;IACA;IACA;MACAQ,YAAA,EAAAC,KAAA;QACA;QACA,OAAAA,KAAA,CAAAC,IAAA,CAAAF,YAAA;MACA;IACA;EACA;EACAG,OAAA;IACA;IACA;IACA;;IAEAC,WAAA,EAAAb,QAAA,WAAAc,KAAA;MACA,KAAAV,YAAA,GAAAU,KAAA;IACA;IACAC,WAAA;MACA,KAAAX,YAAA;IACA;IACA;IACA;IACAY,SAAAC,CAAA;MACA,IAAAC,OAAA,GAAAD,CAAA,CAAAE,MAAA;MACA;QAAAC,YAAA;QAAAC,WAAA;QAAAC,WAAA;QAAAC;MAAA,IAAAL,OAAA,CAAAM,OAAA;MACA,IAAAJ,YAAA;QACA;QACA,IAAAK,QAAA;UAAAvB,IAAA;UAAAwB,KAAA;YAAAC,YAAA,EAAAP;UAAA;QAAA;QACA,IAAAC,WAAA;UACAI,QAAA,CAAAC,KAAA,CAAAL,WAAA,GAAAA,WAAA;QACA,WAAAC,WAAA;UACAG,QAAA,CAAAC,KAAA,CAAAJ,WAAA,GAAAA,WAAA;QACA;UACAG,QAAA,CAAAC,KAAA,CAAAE,WAAA,GAAAA,WAAA;QACA;QACA,KAAAC,OAAA,CAAAC,IAAA,CAAAL,QAAA;MACA;IAKA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}